{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\Desktop\\\\pi-s_webapp\\\\src\\\\components\\\\TaskPage\\\\TasksPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'; // Ajout à faire\n// Rendre plus joli avec Bootstrap\n// NoSql -> créer API pour ça\n// Ajout de contact\n// Page de rappel d'event peut être cool aussi\n// Attendre le logo pour l'ajouter\n\nlet taskList = [];\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n  /*const fetchUsers = async () => {\r\n    fetch('/api/users/listeUser')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"here we go ? \", data)\r\n        if (data.error)\r\n          return alert(\"Error:\" + data.error);\r\n        setPios(data);\r\n        console.log(pios)\r\n      })\r\n      .catch(err => console.error(\"[DashBoard] Error when fetching users:\", err));\r\n  };*/\n\n\n  fetchTaskList() {\n    return ['hello', 'hello2'];\n  }\n\n  componentDidMount() {\n    taskList = this.fetchTaskList();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      id: \"titreApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"TodoApp\"), React.createElement(\"div\", {\n      id: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"ITEM 1\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"ITEM 2\")));\n  }\n\n}\n\nexport default DashboardPage;","map":{"version":3,"sources":["C:\\Users\\natha\\Desktop\\pi-s_webapp\\src\\components\\TaskPage\\TasksPage.jsx"],"names":["React","useState","useEffect","Route","Link","BrowserRouter","Router","taskList","DashboardPage","Component","constructor","props","state","date","Date","fetchTaskList","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAa,IAAIC,MAAvC,QAAqD,kBAArD,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAP,KAAb;AACD;AACD;;;;;;;;;;;;;;AAaAC,EAAAA,aAAa,GAAE;AACb,WAAO,CAAC,OAAD,EAAU,QAAV,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBT,IAAAA,QAAQ,GAAG,KAAKQ,aAAL,EAAX;AACD;;AAEDE,EAAAA,MAAM,GAAE;AACN,WACE,0CACE;AAAI,MAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CADF;AASD;;AApCyC;;AAuC5C,eAAeT,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\n\r\n// Ajout à faire\r\n// Rendre plus joli avec Bootstrap\r\n// NoSql -> créer API pour ça\r\n// Ajout de contact\r\n// Page de rappel d'event peut être cool aussi\r\n// Attendre le logo pour l'ajouter\r\nlet taskList = [];\r\n\r\nclass DashboardPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {date: new Date()};\r\n  }\r\n  /*const fetchUsers = async () => {\r\n    fetch('/api/users/listeUser')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"here we go ? \", data)\r\n        if (data.error)\r\n          return alert(\"Error:\" + data.error);\r\n        setPios(data);\r\n        console.log(pios)\r\n      })\r\n      .catch(err => console.error(\"[DashBoard] Error when fetching users:\", err));\r\n  };*/\r\n\r\n  fetchTaskList(){\r\n    return ['hello', 'hello2'];\r\n  }\r\n\r\n  componentDidMount(){\r\n    taskList = this.fetchTaskList();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <h1 id=\"titreApp\">TodoApp</h1>\r\n        <div id=\"list\">\r\n          <p>ITEM 1</p>\r\n          <p>ITEM 2</p>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DashboardPage;\r\n"]},"metadata":{},"sourceType":"module"}