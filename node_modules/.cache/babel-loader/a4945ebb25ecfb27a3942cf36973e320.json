{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\Desktop\\\\pi-s_webapp\\\\src\\\\components\\\\TaskPage\\\\TasksPage.jsx\";\nimport React from 'react';\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  fetchTaskList() {\n    return ['hello', 'hello2'];\n  }\n\n  componentDidMount() {\n    console.log(taskList);\n    let tmp = this.fetchTaskList();\n    this.setState({\n      taskList: tmp\n    });\n    console.log(taskList);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      id: \"titreApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"TodoApp\"), React.createElement(\"div\", {\n      id: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.taskList.map((item, i) => {\n      return React.createElement(\"p\", {\n        id: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, item);\n    })));\n  }\n\n}\n\nexport default DashboardPage;\n/*\r\nfetch('/api/users/listeUser')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"here we go ? \", data)\r\n        if (data.error)\r\n          return alert(\"Error:\" + data.error);\r\n        setPios(data);\r\n        console.log(pios)\r\n      })\r\n      .catch(err => console.error(\"[DashBoard] Error when fetching users:\", err));\r\n      */","map":{"version":3,"sources":["C:\\Users\\natha\\Desktop\\pi-s_webapp\\src\\components\\TaskPage\\TasksPage.jsx"],"names":["React","DashboardPage","Component","constructor","props","state","taskList","fetchTaskList","componentDidMount","console","log","tmp","setState","render","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG;AADA,KAAb;AAGD;;AAEDC,EAAAA,aAAa,GAAE;AACb,WAAO,CAAC,OAAD,EAAU,QAAV,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAIK,GAAG,GAAG,KAAKJ,aAAL,EAAV;AACA,SAAKK,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAGK;AAAZ,KAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD;;AAEDO,EAAAA,MAAM,GAAE;AACN,WACE,0CACE;AAAI,MAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpC,aAAO;AAAG,QAAA,EAAE,EAAEA,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWD,IAAX,CAAP;AACD,KAFA,CADH,CAFF,CADF;AAUD;;AA9ByC;;AAiC5C,eAAed,aAAf;AAEA","sourcesContent":["import React from 'react'\r\n\r\nclass DashboardPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskList : []\r\n    };\r\n  }\r\n\r\n  fetchTaskList(){\r\n    return ['hello', 'hello2'];\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(taskList)\r\n    let tmp = this.fetchTaskList();\r\n    this.setState({taskList : tmp})\r\n    console.log(taskList)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <h1 id=\"titreApp\">TodoApp</h1>\r\n        <div id=\"list\">\r\n          {this.state.taskList.map((item, i) => {\r\n            return <p id={i}>{item}</p>\r\n          })}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DashboardPage;\r\n\r\n/*\r\nfetch('/api/users/listeUser')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"here we go ? \", data)\r\n        if (data.error)\r\n          return alert(\"Error:\" + data.error);\r\n        setPios(data);\r\n        console.log(pios)\r\n      })\r\n      .catch(err => console.error(\"[DashBoard] Error when fetching users:\", err));\r\n      */\r\n"]},"metadata":{},"sourceType":"module"}