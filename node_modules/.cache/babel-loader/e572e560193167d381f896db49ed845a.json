{"ast":null,"code":"\"use strict\"; // Copyright 2012-2016, Google, Inc.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst google_auth_library_1 = require(\"google-auth-library\");\n\nconst googleapis_common_1 = require(\"googleapis-common\");\n\nconst apis = require(\"./apis\");\n\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n  constructor() {\n    super(...arguments); // tslint:disable-next-line: variable-name\n\n    this.JWT = google_auth_library_1.JWT; // tslint:disable-next-line: variable-name\n\n    this.Compute = google_auth_library_1.Compute; // tslint:disable-next-line: variable-name\n\n    this.OAuth2 = google_auth_library_1.OAuth2Client;\n  }\n\n}\n\nexports.AuthPlus = AuthPlus;\n\nclass GoogleApis extends apis.GeneratedAPIs {\n  /**\n   * GoogleApis constructor.\n   *\n   * @example\n   * const GoogleApis = require('googleapis').GoogleApis;\n   * const google = new GoogleApis();\n   *\n   * @class GoogleApis\n   * @param {Object} [options] Configuration options.\n   */\n  constructor(options) {\n    super();\n    this._discovery = new googleapis_common_1.Discovery({\n      debug: false,\n      includePrivate: false\n    });\n    this.auth = new AuthPlus();\n    this._options = {};\n    this.options(options);\n  }\n  /**\n   * Obtain a Map of supported APIs, along with included API versions.\n   */\n\n\n  getSupportedAPIs() {\n    const apiMap = {};\n    Object.keys(apis.APIS).forEach(a => {\n      apiMap[a] = Object.keys(apis.APIS[a]);\n    });\n    return apiMap;\n  }\n  /**\n   * Set options.\n   *\n   * @param  {Object} [options] Configuration options.\n   */\n\n\n  options(options) {\n    this._options = options || {};\n  }\n  /**\n   * Add APIs endpoints to googleapis object\n   * E.g. googleapis.drive and googleapis.datastore\n   *\n   * @name GoogleApis#addAPIs\n   * @method\n   * @param {Object} apis Apis to be added to this GoogleApis instance.\n   * @private\n   */\n\n\n  addAPIs(apisToAdd) {\n    for (const apiName in apisToAdd) {\n      if (apisToAdd.hasOwnProperty(apiName)) {\n        // tslint:disable-next-line: no-any\n        this[apiName] = apisToAdd[apiName].bind(this);\n      }\n    }\n  }\n\n  discover(url, callback) {\n    if (callback) {\n      this.discoverAsync(url).then(() => callback()).catch(callback);\n    } else {\n      return this.discoverAsync(url);\n    }\n  }\n\n  discoverAsync(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const allApis = yield this._discovery.discoverAllAPIs(url);\n      this.addAPIs(allApis);\n    });\n  }\n  /**\n   * Dynamically generate an Endpoint object from a discovery doc.\n   *\n   * @param path Url or file path to discover doc for a single API.\n   * @param Options to configure the Endpoint object generated from the\n   * discovery doc.\n   * @returns A promise that resolves with the configured endpoint.\n   */\n\n\n  discoverAPI(apiPath, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const endpointCreator = yield this._discovery.discoverAPI(apiPath);\n      const ep = endpointCreator(options, this);\n      ep.google = this; // for drive.google.transporter\n\n      return Object.freeze(ep);\n    });\n  }\n\n}\n\nexports.GoogleApis = GoogleApis;","map":null,"metadata":{},"sourceType":"script"}